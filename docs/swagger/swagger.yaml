basePath: '{{.BasePath}}'
definitions:
  api.ConfigState:
    properties:
      id:
        type: integer
      states:
        type: string
    type: object
  api.Configuration:
    properties:
      id:
        description: 用户ID --不填
        type: integer
      language:
        description: 语言选择 1简体中文 2繁体中文 3英文 不更改不填或填0
        type: integer
      message:
        description: 消息推送开关 1开2关 不更改不填或填0
        type: integer
      sound:
        description: 声音开关 1开2关 不更改不填或填0
        type: integer
    type: object
  api.DeviceExpire:
    properties:
      expiredtime:
        description: 过期时间
        type: integer
      ids:
        description: 设备ID
        items:
          type: integer
        type: array
    type: object
  api.DeviceInfos:
    properties:
      devEUI:
        description: 设备UID
        type: string
      info:
        description: '展示在地图上的信息 json : {speend: 100, azimuth:20...} --'
        type: object
      latitude:
        description: 纬度
        type: number
      longitude:
        description: 经度
        type: number
      name:
        description: 设备名称 -- 第一次有效
        type: string
      state:
        description: 状态 --自定义
        type: integer
      times:
        description: 时间 时间戳(秒)
        type: integer
    type: object
  api.DeviceStatus:
    properties:
      ids:
        description: 设备ID
        items:
          type: integer
        type: array
      status:
        description: 状态
        type: integer
    type: object
  api.DevicesID:
    properties:
      ids:
        description: 设备ID
        items:
          type: integer
        type: array
    type: object
  api.DevicesUser:
    properties:
      ids:
        description: 设备ID
        items:
          type: integer
        type: array
      uid:
        description: 子用户ID
        type: integer
    type: object
  api.Fenceinfo:
    properties:
      info:
        description: '围栏信息json  1: {Lat:21.32, Lng:113.21, radius: 123}  2:[{Lat:21.32,
          Lng:113.21}, {Lat:21.32, Lng:113.21}....]'
        type: object
      types:
        description: 1 圆 2方
        type: integer
    type: object
  api.FencetID:
    properties:
      id:
        description: 围栏ID  --传0则为删除自己的围栏
        type: integer
    type: object
  api.Info:
    properties:
      address:
        description: 地址 不修改不传
        type: string
      email:
        description: 邮箱 不修改不传
        type: string
      id:
        description: 用户ID 修改自身不传
        type: integer
      mobile:
        description: 手机 不修改不传
        type: string
      photo:
        description: 头像  不修改不传
        type: string
    type: object
  api.LoginInfos:
    properties:
      code:
        description: 验证码
        type: string
      name:
        description: 登陆名
        type: string
      password:
        description: 密码 MD5加密(小写)
        type: string
    type: object
  api.PasswordInfo:
    properties:
      id:
        description: 用户ID 修改自身不传
        type: integer
      oldpassword:
        description: 旧密码 MD5加密 修改下级用户不传
        type: string
      password:
        description: 新密码 MD5加密
        type: string
    type: object
  api.Permisson:
    properties:
      devices:
        description: 设备数
        type: integer
      fence:
        description: 围栏权限 1启用 2禁止
        type: integer
      fenceAlarm:
        description: 围栏报警权限 1启用 2禁止
        type: integer
      id:
        description: vipID
        type: integer
      logo:
        description: 定制LOGO权限 1启用 2禁止
        type: integer
      orbit:
        description: 轨迹权限 1启用 2禁止
        type: integer
      real:
        description: 实时数据权限 1启用 2禁止
        type: integer
      users:
        description: 子用户数
        type: integer
    type: object
  api.Registerinfo:
    properties:
      code:
        description: 验证码
        type: string
      codeJWT:
        description: 验证码标记
        type: string
      email:
        description: 邮箱
        type: string
      mobile:
        description: 手机号码
        type: string
      name:
        description: 账号
        type: string
      password:
        description: 密码 MD5加密(小写)
        type: string
    type: object
  api.UserDelID:
    properties:
      id:
        description: 用户ID
        items:
          type: integer
        type: array
    type: object
  api.UserExpire:
    properties:
      expiredtime:
        description: 过期时间
        type: integer
      ids:
        description: 用户ID
        items:
          type: integer
        type: array
    type: object
  api.UserStatus:
    properties:
      ids:
        description: 用户ID
        items:
          type: integer
        type: array
      status:
        description: 状态
        type: integer
    type: object
host: '{{.Host}}'
info:
  contact: {}
  description: '{{.Description}}'
  license: {}
  title: '{{.Title}}'
  version: '{{.Version}}'
paths:
  /config:
    get:
      consumes:
      - application/json
      description: 获取用户配置
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: 获取用户配置
      tags:
      - config
    put:
      consumes:
      - application/json
      description: .更改用户配置
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户配置信息
        in: body
        name: configuration
        required: true
        schema:
          $ref: '#/definitions/api.Configuration'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: .更改用户配置
      tags:
      - config
  /configState:
    get:
      consumes:
      - application/json
      description: .获取状态配置
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: .获取状态配置
      tags:
      - config
    put:
      consumes:
      - application/json
      description: .更改状态配置
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 状态配置信息
        in: body
        name: configState
        required: true
        schema:
          $ref: '#/definitions/api.ConfigState'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: .更改状态配置
      tags:
      - config
  /devicedata:
    get:
      consumes:
      - application/json
      description: 获取数据列表
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 起始数
        in: query
        name: offset
        type: string
      - description: 获取数
        in: query
        name: limit
        type: string
      - description: 数据状态(自定义状态)
        in: query
        name: status
        type: string
      - description: 数据起始时间
        in: query
        name: starttime
        type: string
      - description: 数据终止时间
        in: query
        name: endtime
        type: string
      - description: 设备id
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: 获取数据列表
      tags:
      - devicedata
    post:
      consumes:
      - application/json
      description: 设备数据推送 -- 只接受管理员账号数据推送
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 设备数据信息
        in: body
        name: userInfo
        required: true
        schema:
          $ref: '#/definitions/api.DeviceInfos'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"Result": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Result": null}'
          schema:
            type: string
      summary: 设备数据推送
      tags:
      - devicedata
  /devices:
    delete:
      consumes:
      - application/json
      description: .删除设备
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 设备ID
        in: body
        name: devicesID
        required: true
        schema:
          $ref: '#/definitions/api.DevicesID'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: .删除设备(仅管理员以上)
      tags:
      - devices
    get:
      consumes:
      - application/json
      description: 获取设备列表
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 起始数
        in: query
        name: offset
        type: string
      - description: 获取数
        in: query
        name: limit
        type: string
      - description: 设备状态 1启用 2禁用 3已过期
        in: query
        name: status
        type: string
      - description: 设备到期起始时间
        in: query
        name: starttime
        type: string
      - description: 设备到期终止时间
        in: query
        name: endtime
        type: string
      - description: 设备名
        in: query
        name: name
        type: string
      - description: 群组id
        in: query
        name: classid
        type: integer
      - description: 用户id
        in: query
        name: uid
        type: integer
      - description: 设备id
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: 获取设备列表
      tags:
      - devices
  /devices/expire:
    put:
      consumes:
      - application/json
      description: .更改设备过期时间
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 设备过期时间信息
        in: body
        name: deviceExpire
        required: true
        schema:
          $ref: '#/definitions/api.DeviceExpire'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: .更改设备过期时间(仅管理员以上)
      tags:
      - devices
  /devices/status:
    put:
      consumes:
      - application/json
      description: 更改设备状态
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 设备状态信息
        in: body
        name: deviceStatus
        required: true
        schema:
          $ref: '#/definitions/api.DeviceStatus'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: 更改设备状态(仅管理员以上)
      tags:
      - devices
  /devices/user:
    put:
      consumes:
      - application/json
      description: .更改设备所属权
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 设备所属权信息
        in: body
        name: devicesUser
        required: true
        schema:
          $ref: '#/definitions/api.DevicesUser'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: .更改设备所属权(仅管理员以上)
      tags:
      - devices
  /fence:
    delete:
      consumes:
      - application/json
      description: .删除用户围栏
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户围栏信息
        in: body
        name: fencetID
        required: true
        schema:
          $ref: '#/definitions/api.FencetID'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: .删除用户围栏
      tags:
      - fence
    get:
      consumes:
      - application/json
      description: 获取用户围栏
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户ID
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: 获取用户围栏
      tags:
      - fence
    post:
      consumes:
      - application/json
      description: .设置用户围栏
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户围栏信息
        in: body
        name: fenceinfo
        required: true
        schema:
          $ref: '#/definitions/api.Fenceinfo'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: .设置用户围栏
      tags:
      - fence
  /login:
    post:
      consumes:
      - application/json
      description: 账号登陆
      parameters:
      - description: 登陆信息
        in: body
        name: userInfo
        required: true
        schema:
          $ref: '#/definitions/api.LoginInfos'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: 账号登陆
      tags:
      - login
  /login/code:
    get:
      consumes:
      - application/json
      description: 获取错误代码
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: 获取错误代码
      tags:
      - login
  /login/info:
    get:
      consumes:
      - application/json
      description: 获取登陆信息
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: 获取登陆信息
      tags:
      - login
  /login/logo:
    get:
      consumes:
      - application/json
      description: 获取背景图列表
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: 获取背景图列表
      tags:
      - login
  /login/register:
    put:
      consumes:
      - application/json
      description: 账号申请
      parameters:
      - description: 申请的用户信息
        in: body
        name: userInfo
        required: true
        schema:
          $ref: '#/definitions/api.Registerinfo'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"Result": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Result": null}'
          schema:
            type: string
      summary: 账号申请
      tags:
      - login
  /login/register/name:
    get:
      consumes:
      - application/json
      description: 检测账号是否存在
      parameters:
      - description: 用户名
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: 检测账号是否存在
      tags:
      - login
  /upload:
    post:
      consumes:
      - application/json
      description: 图片上传
      parameters:
      - description: JWT
        in: query
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: 图片上传
      tags:
      - upload
  /users:
    delete:
      consumes:
      - application/json
      description: .删除用户
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户ID
        in: body
        name: userDelID
        required: true
        schema:
          $ref: '#/definitions/api.UserDelID'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: .删除用户(仅管理员以上)
      tags:
      - user
    get:
      consumes:
      - application/json
      description: 获取用户列表
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 起始数
        in: query
        name: offset
        type: string
      - description: 获取数
        in: query
        name: limit
        type: string
      - description: 用户状态 1启用 2禁用 3已过期
        in: query
        name: status
        type: string
      - description: 用户到期起始时间
        in: query
        name: starttime
        type: string
      - description: 用户到期终止时间
        in: query
        name: endtime
        type: string
      - description: 用户名
        in: query
        name: name
        type: string
      - description: 群组id
        in: query
        name: ownid
        type: integer
      - description: 用户id
        in: query
        name: id
        type: integer
      - description: 用户级别
        in: query
        name: permisson
        type: integer
      - description: VIP等级
        in: query
        name: vip
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: 获取用户列表
      tags:
      - user
  /users/expire:
    put:
      consumes:
      - application/json
      description: .更改用户过期时间
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户过期时间信息
        in: body
        name: userExpire
        required: true
        schema:
          $ref: '#/definitions/api.UserExpire'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: .更改用户过期时间(仅管理员以上)
      tags:
      - user
  /users/info:
    put:
      consumes:
      - application/json
      description: .更改用户信息
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户信息
        in: body
        name: Info
        required: true
        schema:
          $ref: '#/definitions/api.Info'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: .更改用户信息
      tags:
      - user
  /users/password:
    put:
      consumes:
      - application/json
      description: .更改用户密码
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户密码
        in: body
        name: PasswordInfo
        required: true
        schema:
          $ref: '#/definitions/api.PasswordInfo'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: .更改用户密码
      tags:
      - user
  /users/status:
    put:
      consumes:
      - application/json
      description: 更改用户状态
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户状态信息
        in: body
        name: userStatus
        required: true
        schema:
          $ref: '#/definitions/api.UserStatus'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: 更改用户状态(仅管理员以上)
      tags:
      - user
  /vip:
    get:
      consumes:
      - application/json
      description: 获取vip列表
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: 获取vip列表
      tags:
      - vip
    put:
      consumes:
      - application/json
      description: 获取vip列表
      parameters:
      - description: With the bearer started JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: vip信息
        in: body
        name: Permisson
        required: true
        schema:
          $ref: '#/definitions/api.Permisson'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"Error":"Success","Data": object}'
          schema:
            type: string
        "301":
          description: '{"Error":"Re-login","Data": object}'
          schema:
            type: string
        "500":
          description: '{"Error":"error","Data": null}'
          schema:
            type: string
      summary: 获取vip列表
      tags:
      - vip
  /ws:
    get:
      consumes:
      - application/json
      description: websocket连接 /ws?maxiiot_user=token&roomID=roomID
      parameters:
      - description: jwt
        in: query
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      summary: websocket连接 /ws?maxiiot_user=token&roomID=roomID
      tags:
      - websocket
swagger: "2.0"
